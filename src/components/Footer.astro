---
import { GLOBAL } from '../lib/variables';
import Anchor from './common/Anchor.astro';
import Section from './common/Section.astro';

const date = new Date();
const year = date.getFullYear();
---

<footer class="mt-16 mb-8">
  <Section class="mb-4">
    <div class="zag-border-b zag-transition pb-4 flex flex-col sm:flex-row sm:flex-nowrap gap-8 sm:items-center">
      <ul class="flex flex-col gap-2">
        {
          Object.entries(GLOBAL.menu).map((i) => (
            <li>
              <Anchor url={i[1]}>{i[0]}</Anchor>
            </li>
          ))
        }
      </ul>
      <div class="flex flex-start items-start gap-4 w-full">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          viewBox="0 0 24 24"
          class="zag-fill zag-transition w-8 h-8 min-h-8 min-w-8 max-h-8 max-w-8 -translate-y-2"
          ><path fill="currentColor" d="m10 7l-2 4h3v6H5v-6l2-4zm8 0l-2 4h3v6h-6v-6l2-4z"></path></svg
        >
        <p id="quote" class="zag-text zag-transition"></p>
      </div>
      <div class="flex flex-row sm:flex-col gap-4">
        {
          GLOBAL.githubProfile && (
            <Anchor url={GLOBAL.githubProfile} aria-label="GitHub Profile">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24">
                <path
                  class="zag-fill zag-transition"
                  d="M12 2A10 10 0 0 0 2 12c0 4.42 2.87 8.17 6.84 9.5c.5.08.66-.23.66-.5v-1.69c-2.77.6-3.36-1.34-3.36-1.34c-.46-1.16-1.11-1.47-1.11-1.47c-.91-.62.07-.6.07-.6c1 .07 1.53 1.03 1.53 1.03c.87 1.52 2.34 1.07 2.91.83c.09-.65.35-1.09.63-1.34c-2.22-.25-4.55-1.11-4.55-4.92c0-1.11.38-2 1.03-2.71c-.1-.25-.45-1.29.1-2.64c0 0 .84-.27 2.75 1.02c.79-.22 1.65-.33 2.5-.33s1.71.11 2.5.33c1.91-1.29 2.75-1.02 2.75-1.02c.55 1.35.2 2.39.1 2.64c.65.71 1.03 1.6 1.03 2.71c0 3.82-2.34 4.66-4.57 4.91c.36.31.69.92.69 1.85V21c0 .27.16.59.67.5C19.14 20.16 22 16.42 22 12A10 10 0 0 0 12 2"
                />
              </svg>
            </Anchor>
          )
        }
        {
          GLOBAL.linkedinProfile && (
            <Anchor url={GLOBAL.linkedinProfile} aria-label="LinkedIn Profile">
              <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 24 24">
                <path
                  class="zag-fill zag-transition"
                  fill="currentColor"
                  d="M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11.12 19h-3.08v-9h3.08v9zm-1.54-10.29c-.99 0-1.79-.8-1.79-1.79s.8-1.79 1.79-1.79 1.79.8 1.79 1.79-.8 1.79-1.79 1.79zm13.16 10.29h-3.08v-4.89c0-1.16-.02-2.64-1.61-2.64s-1.86 1.26-1.86 2.57v4.96h-3.08v-9h2.96v1.23h.04c.41-.78 1.4-1.6 2.88-1.6 3.08 0 3.65 2.03 3.65 4.66v4.71z"
                />
              </svg>
            </Anchor>
          )
        }
      </div>
    </div>
  </Section>
  <p class="zag-text zag-transition text-center text-sm font-medium">
    &copy; {year}
    {GLOBAL.username}. All rights reserved.
  </p>
</footer>

<script>
  const quotes = [
    {
      quote:
        'There are only two hard things in computer science: cache invalidation, naming things, and off-by-one errors.',
      source: "Dr. Redundancy's Journal of Recursive Humor",
    },
    {
      quote: '99 little bugs in the code, 99 little bugs. Take one down, patch it around, 127 little bugs in the code.',
      source: "The Programmer's Songbook, 3rd Edition (Debugging Ballads)",
    },
    {
      quote: "I don't always test my code, but when I do, I do it in production.",
      source: "The Most Interesting Developer in the World's Autobiography",
    },
    {
      quote:
        'Programming is like writing a book... except if you miss out a single comma on page 126, the whole thing makes no damn sense.',
      source: "Literary Coding: A Novelist's Guide to JavaScript",
    },
    {
      quote: 'Code never lies, comments sometimes do, but documentation is pure fiction.',
      source: 'Mythbusters: Software Edition',
    },
    {
      quote: "My code doesn't always work, but when it does, I have no idea why.",
      source: 'Confessions of a Stack Overflow Copy-Paste Engineer',
    },
    {
      quote: 'Walking on water and developing software from a specification are easy if both are frozen.',
      source: 'Zen and the Art of Waterfall Methodology',
    },
    {
      quote: 'If debugging is the process of removing bugs, then programming must be the process of putting them in.',
      source: "Captain Obvious's Guide to Software Development",
    },
    {
      quote: "A programmer is told to 'go to hell.' He finds the worst part of that statement is the 'go to'.",
      source: 'Clean Code Comedy: A Structured Programming Joke Book',
    },
    {
      quote: 'In order to understand recursion, you must first understand recursion.',
      source: 'The Infinite Loop Cookbook, Page âˆž',
    },
    {
      quote: "There are 10 types of people in the world: those who understand binary and those who don't.",
      source: 'Mathematics for Comedians, Chapter 01010000',
    },
    {
      quote: 'Programmers are tools for converting coffee into code.',
      source: 'The Caffeine-Driven Development Manifesto',
    },
    {
      quote: 'Real programmers count from 0.',
      source: 'Off-by-One Errors Anonymous Meeting Minutes',
    },
    {
      quote: "It's not a bug, it's an undocumented feature.",
      source: 'Creative Excuses for Software Failures, Volume XVII',
    },
    {
      quote: 'The best thing about a boolean is even if you are wrong, you are only off by one bit.',
      source: 'Binary Humor for Beginners',
    },
    {
      quote: 'Weeks of coding can save you hours of planning.',
      source: "The Procrastinator's Guide to Project Management",
    },
    {
      quote: "I'm not antisocial; I'm just not user friendly.",
      source: "Personality Patterns: An Introvert Developer's Memoir",
    },
    {
      quote: 'Deleted code is debugged code.',
      source: "The Minimalist Programmer's Philosophy",
    },
    {
      quote: 'Copy and paste is a design pattern.',
      source: 'Advanced Software Architecture for the Lazy',
    },
    {
      quote: "If it works, don't touch it. If it doesn't work, blame the intern.",
      source: 'Workplace Politics in Tech: A Survival Guide',
    },
  ];
  const quoteElement = document.getElementById('quote');
  const randomIndex = Math.floor(Math.random() * quotes.length);
  const randomQuote = quotes[randomIndex];
  quoteElement!.textContent = randomQuote.quote;
</script>
